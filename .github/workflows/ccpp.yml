name: C/C++ CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  # compile with older gcc4.8
  build-gcc48:

    runs-on: ubuntu-18.04
    name: Build with gcc 4.8

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: CmakeAndBuild
        run: |
            sudo apt-get update
            sudo apt-get install -y build-essential
            sudo apt-get install -y gcc-4.8 g++-4.8
            ./scripts/bootstrap-gcc-4.8.sh
            cd build-gcc4.8 && make VERBOSE=1

  # Cross-compile for aarch64 linux target
  build-cross-aarch64:

    runs-on: ubuntu-18.04
    name: Build on cross aarch64

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: CmakeAndBuild
        run: |
            sudo apt-get update
            sudo apt-get install -y build-essential
            sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
            ./scripts/bootstrap-gcc-aarch64-cross.sh
            cd build-aarch64-cross && make VERBOSE=1


  # Windows(x64) + Visual Studio 2019 build
  build-windows-msvc:

    runs-on: windows-latest
    name: Build for Windows(x64, MSVC)

    # Use system installed cmake
    # https://help.github.com/en/actions/reference/software-installed-on-github-hosted-runners
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Configure
        run: .\vcsetup-2019.bat
      - name: Build
        run: cmake --build build --config Release

  # MinGW W64 + gcc cross build
  build-mingw-cross:

    runs-on: ubuntu-18.04
    name: Cross compiling with mingw-w64

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: CmakeAndBuild
        run: |
            sudo apt-get update
            sudo apt-get install -y build-essential
            sudo apt-get install -y mingw-w64
            ./scripts/bootstrap-cmake-mingw-gcc-cross.sh 
            cd build-mingw && make VERBOSE=1

  # Android(aarch64) build
  build-android:

    runs-on: ubuntu-18.04
    name: Build for Android(arm64v8a)
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Show android sdk root
        run: |
            env | grep ANDROID
            echo $ANDROID_SDK_ROOT
      - name: Setup
        run: |
            sudo apt-get install -y ninja-build
      - name: CmakeAndBuild
        run: |
            ./scripts/bootstrap-android-cmake-linux.sh
            cd build-android
            ninja -v

  # iOS build
  build-ios:

    runs-on: macos-latest
    name: Build for iOS

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: List up iPhone platform
        run: |
            ls -la /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs
      - name: CmakeAndBuild
        run: |
            ./scripts/bootstrap-aarch64-ios.sh
            cd build-ios-cross
            make VERBOSE=1


  # Native build with distro's defaultg gcc
  build-native-gcc:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: configure
      run: ./scripts/bootstrap-cmake-linux.sh
    - name: make
      run: |
        cd build && make
